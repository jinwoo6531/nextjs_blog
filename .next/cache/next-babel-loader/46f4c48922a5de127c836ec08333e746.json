{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoopark/WebstormProjects/sideProject/woolog/components/AppLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd'; // import UserProfile from '../components/UserProfile';\n\nimport LoginForm from '../components/LoginForm';\nimport { Modal } from './modal/Modal';\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    0: isOpenModal,\n    1: setIsOpenModal\n  } = useState(false);\n  const onClickLogin = useCallback(() => {\n    setIsOpenModal(isOpenModal => !isOpenModal);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"-\", __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, isLoggedIn ? {\n    children\n  } : __jsx(\"button\", {\n    onClick: onClickLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    md: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Modal, {\n    isOpen: isOpenModal,\n    setIsOpen: setIsOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(LoginForm, {\n    setIsOpenModal: setIsOpenModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default AppLayout;","map":{"version":3,"sources":["/Users/jinwoopark/WebstormProjects/sideProject/woolog/components/AppLayout.js"],"names":["React","useState","useCallback","Link","Menu","Input","Row","Col","LoginForm","Modal","AppLayout","children","isLoggedIn","setIsLoggedIn","isOpenModal","setIsOpenModal","onClickLogin"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,KAAT,QAAsB,eAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BZ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAA,OAACa,WAAD;AAAA,OAAcC;AAAd,MAAgCd,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMe,YAAY,GAAGd,WAAW,CAAC,MAAM;AACrCa,IAAAA,cAAc,CAAED,WAAD,IAAiB,CAACA,WAAnB,CAAd;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAcE,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,UAAU,GACT;AAAED,IAAAA;AAAF,GADS,GAGT;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJJ,CAdF,CADF,EAuBE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,WAAf;AAA4B,IAAA,SAAS,EAAEC,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,cAAc,EAAEA,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAvBF,CADF;AAiCD,CAzCD;;AA2CA,eAAeL,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd';\n// import UserProfile from '../components/UserProfile';\nimport LoginForm from '../components/LoginForm';\nimport { Modal } from './modal/Modal';\n\nconst AppLayout = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const onClickLogin = useCallback(() => {\n    setIsOpenModal((isOpenModal) => !isOpenModal);\n  }, []);\n\n  return (\n    <div>\n      <Menu mode=\"horizontal\">\n        {/* <Menu.Item>\n          <Link href=\"/\">\n            <a>Home</a>\n          </Link>\n        </Menu.Item> */}-\n        {/* <Menu.Item>\n          <Link href=\"/profile\">\n            <a>프로필</a>\n          </Link>\n        </Menu.Item> */}\n        {/* <Menu.Item>\n          <Input.Search enterButton style={{ verticalAlign: 'middle' }} />\n        </Menu.Item> */}\n        <Menu.Item>\n          {isLoggedIn ? (\n            { children }\n          ) : (\n            <button onClick={onClickLogin}>로그인</button>\n          )}\n        </Menu.Item>\n      </Menu>\n      <Row>\n        <Col xs={24} md={20}>\n          <Modal isOpen={isOpenModal} setIsOpen={setIsOpenModal}>\n            <LoginForm setIsOpenModal={setIsOpenModal} />\n          </Modal>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default AppLayout;\n"]},"metadata":{},"sourceType":"module"}